// Code generated by protoc-gen-go. DO NOT EDIT.
// source: items.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	items.proto

It has these top-level messages:
	Empty
	StoreGetRequest
	StoreGetResponse
	StorePutRequest
	StoreDeleteRequest
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StoreGetRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *StoreGetRequest) Reset()                    { *m = StoreGetRequest{} }
func (m *StoreGetRequest) String() string            { return proto.CompactTextString(m) }
func (*StoreGetRequest) ProtoMessage()               {}
func (*StoreGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StoreGetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type StoreGetResponse struct {
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *StoreGetResponse) Reset()                    { *m = StoreGetResponse{} }
func (m *StoreGetResponse) String() string            { return proto.CompactTextString(m) }
func (*StoreGetResponse) ProtoMessage()               {}
func (*StoreGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StoreGetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type StorePutRequest struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *StorePutRequest) Reset()                    { *m = StorePutRequest{} }
func (m *StorePutRequest) String() string            { return proto.CompactTextString(m) }
func (*StorePutRequest) ProtoMessage()               {}
func (*StorePutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *StorePutRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StorePutRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type StoreDeleteRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *StoreDeleteRequest) Reset()                    { *m = StoreDeleteRequest{} }
func (m *StoreDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*StoreDeleteRequest) ProtoMessage()               {}
func (*StoreDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StoreDeleteRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "glitchd.items.Empty")
	proto.RegisterType((*StoreGetRequest)(nil), "glitchd.items.StoreGetRequest")
	proto.RegisterType((*StoreGetResponse)(nil), "glitchd.items.StoreGetResponse")
	proto.RegisterType((*StorePutRequest)(nil), "glitchd.items.StorePutRequest")
	proto.RegisterType((*StoreDeleteRequest)(nil), "glitchd.items.StoreDeleteRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for Store service

type StoreClient interface {
	Get(ctx context.Context, in *StoreGetRequest, opts ...grpc1.CallOption) (*StoreGetResponse, error)
	Put(ctx context.Context, in *StorePutRequest, opts ...grpc1.CallOption) (*Empty, error)
	Delete(ctx context.Context, in *StoreDeleteRequest, opts ...grpc1.CallOption) (*Empty, error)
}

type storeClient struct {
	cc *grpc1.ClientConn
}

func NewStoreClient(cc *grpc1.ClientConn) StoreClient {
	return &storeClient{cc}
}

func (c *storeClient) Get(ctx context.Context, in *StoreGetRequest, opts ...grpc1.CallOption) (*StoreGetResponse, error) {
	out := new(StoreGetResponse)
	err := grpc1.Invoke(ctx, "/glitchd.items.Store/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Put(ctx context.Context, in *StorePutRequest, opts ...grpc1.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc1.Invoke(ctx, "/glitchd.items.Store/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Delete(ctx context.Context, in *StoreDeleteRequest, opts ...grpc1.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc1.Invoke(ctx, "/glitchd.items.Store/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Store service

type StoreServer interface {
	Get(context.Context, *StoreGetRequest) (*StoreGetResponse, error)
	Put(context.Context, *StorePutRequest) (*Empty, error)
	Delete(context.Context, *StoreDeleteRequest) (*Empty, error)
}

func RegisterStoreServer(s *grpc1.Server, srv StoreServer) {
	s.RegisterService(&_Store_serviceDesc, srv)
}

func _Store_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Get(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glitchd.items.Store/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Get(ctx, req.(*StoreGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorePutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Put(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glitchd.items.Store/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Put(ctx, req.(*StorePutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Delete(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glitchd.items.Store/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Delete(ctx, req.(*StoreDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Store_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "glitchd.items.Store",
	HandlerType: (*StoreServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Store_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _Store_Put_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Store_Delete_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "items.proto",
}

func init() { proto.RegisterFile("items.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x57, 0x4b, 0x27, 0x3e, 0x15, 0xc7, 0x63, 0x07, 0xd9, 0xc1, 0x1f, 0x11, 0x64, 0xa7,
	0x04, 0xdd, 0x45, 0x05, 0x2f, 0xfe, 0x60, 0x1e, 0x47, 0xbd, 0x79, 0xdb, 0xea, 0xa3, 0xab, 0x6b,
	0x4d, 0x4d, 0x5e, 0x06, 0xfb, 0x43, 0xfd, 0x7f, 0xc4, 0x74, 0x50, 0x37, 0xcc, 0xa9, 0x4d, 0xde,
	0xf7, 0xfb, 0x21, 0x9f, 0x04, 0xf6, 0x0b, 0xa6, 0xca, 0xca, 0xda, 0x68, 0xd6, 0x78, 0x98, 0x97,
	0x05, 0x67, 0xf3, 0x77, 0xe9, 0x37, 0xc5, 0x2e, 0x24, 0xcf, 0x55, 0xcd, 0x2b, 0x71, 0x01, 0x47,
	0xaf, 0xac, 0x0d, 0x8d, 0x89, 0x53, 0xfa, 0x72, 0x64, 0x19, 0x7b, 0x10, 0x2f, 0x68, 0x75, 0x1c,
	0x9d, 0x45, 0xc3, 0xbd, 0xf4, 0xf7, 0x57, 0x0c, 0xa1, 0xd7, 0x86, 0x6c, 0xad, 0x3f, 0x2d, 0x61,
	0x1f, 0x92, 0xe5, 0xb4, 0x74, 0xe4, 0x73, 0x07, 0x69, 0xb3, 0x10, 0xb7, 0x6b, 0xdc, 0xc4, 0x85,
	0x71, 0x6d, 0x75, 0xe7, 0x6f, 0xf5, 0x12, 0xd0, 0x57, 0x9f, 0xa8, 0x24, 0xa6, 0x60, 0xfb, 0xfa,
	0x3b, 0x82, 0xc4, 0x07, 0xf1, 0x05, 0xe2, 0x31, 0x31, 0x9e, 0xc8, 0x0d, 0x37, 0xb9, 0xe5, 0x33,
	0x38, 0x0d, 0xce, 0x1b, 0x15, 0xd1, 0xc1, 0x7b, 0x88, 0x27, 0x2e, 0x40, 0x6a, 0x55, 0x06, 0xfd,
	0xad, 0x79, 0x73, 0x85, 0x1d, 0x7c, 0x84, 0x6e, 0x73, 0x6a, 0x3c, 0xff, 0x8f, 0xb0, 0x61, 0x14,
	0x82, 0x3c, 0xdc, 0xbd, 0xdd, 0xe4, 0x05, 0xcf, 0xdd, 0x4c, 0x66, 0xba, 0x52, 0x1f, 0xf6, 0x6a,
	0xb4, 0xc8, 0xa7, 0x15, 0x59, 0xb5, 0x8e, 0x2b, 0x4b, 0x66, 0x49, 0xc6, 0x7f, 0x8a, 0x8c, 0xac,
	0xf2, 0x75, 0x95, 0x9b, 0x3a, 0x9b, 0x75, 0xfd, 0x23, 0x8f, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x55, 0x2c, 0x98, 0xba, 0xf3, 0x01, 0x00, 0x00,
}
